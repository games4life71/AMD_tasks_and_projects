//module for registers and data control unit 


module registers(

input [4:0] read_register1,  //rs the first regisrer 
input [4:0] read_register2, //rt  the second register 
input [4:0] write_register ,  //rd  the register we write data into 
input [4:0] write_data,   //  the data we write 
input reg_write_enable; 

output [31:0] read_data1,   
output [31:0] read_data2,


);
//32 registers of 32 bits each 
reg[31:0] registers[31:0];


//logic for reading and writing the data and pass it to the next control level 

always@(*) begin  //for every state change in all the variables 

assign read_data1 <= register[read_register1]; // dont know if it works 
assign read_data2<=register[read_register2];


//if the register is enabled to write data 

if(reg_write_enable == 1) begin 

//TODO complete code after implementing ALU and DATA MEMORY modules 



end 

end 



endmodule
